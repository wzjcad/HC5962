name: Build OpenWrt
on: 
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  #REPO_URL: https://github.com/openwrt/openwrt
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai
  
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    
#    - name: Checkout
 #     uses: actions/checkout@main
 
    - name: config test
      run: |
        cat >  .config << EOF
        CONFIG_TARGET_ramips=y
        ONFIG_TARGET_ramips_mt7621=y
        CONFIG_TARGET_ramips_mt7621_DEVICE_hiwifi_hc5962=y
        EOF
        ls -al && cat .config
 

    
    - name: Installation depends
      run: |
        sudo apt-get update
        sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        sudo timedatectl set-timezone "$TZ"
    
    - name: test
      run: |
        sudo whoami && id && pwd && ls -al
        
    
        
    - name : clone & feeds install
      run: |
        git clone https://github.com/openwrt/openwrt
        cd openwrt
        echo 'src-git small8 https://github.com/kenzok8/small-package' >>feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
    - name: test
      run:
        sudo whoami && id && pwd && ls -al
 
    - name: config
      run: |
        cd openwrt
        sed -i 's/192.168.1.1/192.168.9.199/g' package/base-files/files/bin/config_generate
        cat > .config << EOF
        CONFIG_TARGET_ramips=y
        CONFIG_TARGET_ramips_mt7621=y
        CONFIG_TARGET_ramips_mt7621_DEVICE_hiwifi_hc5962=y
        CONFIG_KSMBD_SMB_INSECURE_SERVER=y
        CONFIG_PACKAGE_NTFS-3G_HAS_PROBE=y
        CONFIG_PACKAGE_SAMBA_MAX_DEBUG_LEVEL=-1
        CONFIG_PACKAGE_adbyby=m
        CONFIG_PACKAGE_adguardhome=m
        CONFIG_PACKAGE_bash=y
        CONFIG_PACKAGE_blkid=y
        CONFIG_PACKAGE_coreutils-nohup=y
        CONFIG_PACKAGE_e2fsprogs=y
        CONFIG_PACKAGE_frpc=y
        CONFIG_PACKAGE_hd-idle=y
        CONFIG_PACKAGE_kmod-crypto-md4=y
        CONFIG_PACKAGE_kmod-crypto-sha512=y
        CONFIG_PACKAGE_kmod-fs-cifs=y
        CONFIG_PACKAGE_kmod-fs-ksmbd=y
        CONFIG_PACKAGE_kmod-fuse=y
        CONFIG_PACKAGE_kmod-inet-diag=y
        CONFIG_PACKAGE_kmod-nls-cp936=y
        CONFIG_PACKAGE_kmod-nls-iso8859-1=y
        CONFIG_PACKAGE_kmod-nls-utf8=y
        CONFIG_PACKAGE_kmod-oid-registry=y
        CONFIG_PACKAGE_kmod-scsi-core=y
        CONFIG_PACKAGE_kmod-usb-ehci=y
        CONFIG_PACKAGE_kmod-usb-ohci=y
        CONFIG_PACKAGE_kmod-usb-printer=y
        CONFIG_PACKAGE_kmod-usb-storage=y
        CONFIG_PACKAGE_kmod-usb-storage-extras=y
        CONFIG_PACKAGE_kmod-usb-uhci=y
        CONFIG_PACKAGE_kmod-usb2=y
        CONFIG_PACKAGE_kmod-usb2-pci=y
        CONFIG_PACKAGE_ksmbd-server=y
        CONFIG_PACKAGE_libaio=y
        CONFIG_PACKAGE_libblkid=y
        CONFIG_PACKAGE_libcap=y
        CONFIG_PACKAGE_libcap-bin=y
        CONFIG_PACKAGE_libcap-bin-capsh-shell="/bin/sh"
        CONFIG_PACKAGE_libcomerr=y
        CONFIG_PACKAGE_libext2fs=y
        CONFIG_PACKAGE_libgmp=y
        CONFIG_PACKAGE_libminiupnpc=y
        CONFIG_PACKAGE_libmount=y
        CONFIG_PACKAGE_libnatpmp=y
        CONFIG_PACKAGE_libncurses=y
        CONFIG_PACKAGE_libnl-core=y
        CONFIG_PACKAGE_libnl-genl=y
        CONFIG_PACKAGE_libparted=y
        CONFIG_PACKAGE_libpopt=y
        CONFIG_PACKAGE_libreadline=y
        CONFIG_PACKAGE_libruby=y
        CONFIG_PACKAGE_libsmartcols=y
        CONFIG_PACKAGE_libss=y
        CONFIG_PACKAGE_libstdcpp=y
        CONFIG_PACKAGE_libuv=y
        CONFIG_PACKAGE_libwebsockets-full=y
        CONFIG_PACKAGE_libyaml=y
        CONFIG_PACKAGE_lsblk=y
        CONFIG_PACKAGE_luci-app-adbyby-plus=m
        CONFIG_PACKAGE_luci-app-adguardhome=m
        CONFIG_PACKAGE_luci-app-cifs-mount=y
        CONFIG_PACKAGE_luci-app-diskman=y
        CONFIG_PACKAGE_luci-app-diskman_INCLUDE_lsblk=y
        CONFIG_PACKAGE_luci-app-frpc=y
        CONFIG_PACKAGE_luci-app-hd-idle=y
        CONFIG_PACKAGE_luci-app-netdata=y
        CONFIG_PACKAGE_luci-app-nps=y
        CONFIG_PACKAGE_luci-app-openclash=y
        CONFIG_PACKAGE_luci-app-samba=y
        CONFIG_PACKAGE_luci-app-ttyd=y
        CONFIG_PACKAGE_luci-app-usb-printer=y
        CONFIG_PACKAGE_luci-app-zerotier=y
        CONFIG_PACKAGE_luci-i18n-adbyby-plus-zh-cn=m
        CONFIG_PACKAGE_luci-i18n-adguardhome-zh-cn=m
        CONFIG_PACKAGE_luci-i18n-cifs-mount-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-diskman-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-frpc-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-hd-idle-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-netdata-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-nps-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-samba-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-ttyd-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-usb-printer-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-zerotier-zh-cn=y
        CONFIG_PACKAGE_luci-theme-argon=y
        CONFIG_PACKAGE_luci-theme-edge=m
        CONFIG_PACKAGE_luci-theme-ifit=m
        CONFIG_PACKAGE_luci-theme-opentopd=m
        CONFIG_PACKAGE_netdata=y
        CONFIG_PACKAGE_npc=y
        CONFIG_PACKAGE_ntfs-3g=y
        CONFIG_PACKAGE_p910nd=y
        CONFIG_PACKAGE_parted=y
        CONFIG_PACKAGE_ruby=y
        CONFIG_PACKAGE_ruby-bigdecimal=y
        CONFIG_PACKAGE_ruby-date=y
        CONFIG_PACKAGE_ruby-digest=y
        CONFIG_PACKAGE_ruby-enc=y
        CONFIG_PACKAGE_ruby-forwardable=y
        CONFIG_PACKAGE_ruby-pstore=y
        CONFIG_PACKAGE_ruby-psych=y
        CONFIG_PACKAGE_ruby-stringio=y
        CONFIG_PACKAGE_ruby-strscan=y
        CONFIG_PACKAGE_ruby-yaml=y
        CONFIG_PACKAGE_samba36-server=y
        CONFIG_PACKAGE_smartmontools=y
        CONFIG_PACKAGE_terminfo=y
        CONFIG_PACKAGE_ttyd=y
        CONFIG_PACKAGE_unzip=y
        CONFIG_PACKAGE_wsdd2=y
        CONFIG_PACKAGE_zerotier=y
        CONFIG_PARTED_READLINE=y                                          
        EOF
        ls -al && cat .config
        
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}  
        
 #   - name: Load custom feeds
 #     run: |
#        [ -e $FEEDS_CONF ] && cp $FEEDS_CONF openwrt/feeds.conf.default
#        chmod +x $DIY_P1_SH
#        cd openwrt
#        $GITHUB_WORKSPACE/$DIY_P1_SH
        
#    - name: Load custom configuration
#      run: |
#        [ -e files ] && mv files openwrt/files
#        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
#        chmod +x $DIY_P2_SH
 #       cd openwrt
#        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: test
      run: |
        cd openwrt
        sudo whoami && id && pwd && ls -al   
        
    - name: Generate config file
      run: |
        cd openwrt
        cat .config
        make defconfig
        ./scripts/diffconfig.sh > seed.config
        
    - name: Download package
      run: |
        cd openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Build
      run: |
        cd openwrt
        make -j$(nproc)
    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt
        path: openwrt/bin
